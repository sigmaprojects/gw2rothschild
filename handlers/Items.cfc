component output="false" singleton{	property name="WatchlistService" inject="WatchlistService";	property name="UserService" inject="UserService";	property name="ItemService" inject="ItemService";	property name="MarketDataService" inject="MarketDataService";		function index(event,rc,prc){		rc.htmltitle = " > Item Search";		rc.ItemTypes = ORMExecuteQuery('select distinct new map(it.itemtype_id as itemtype_id, it.item_type as item_type) from ItemType it group by item_type');		rc.Rarities = getModel('RarityService').list();				if( !structkeyExists(rc,'page') && !structKeyExists(rc,'hasUpgradeComponent') ) {			Event.paramValue('hasUpgradeComponent',true);		} else {			Event.paramValue('hasUpgradeComponent',false);		}				Event.paramValue('page',1);		Event.paramValue('itemtype_name','');		Event.paramValue('rarity_id','');		Event.paramValue('level_range','');		Event.paramValue('watchlist',false);				Event.paramValue('showextra',false);		Event.paramValue('sortorder','upgradecomponent_price_difference asc');		Event.paramValue('keyword','');		Event.paramValue('per_page',event.getNumericValue('per_page',20));				if( prc.isLoggedIn &&  rc.watchlist ) {			rc.item_id = WatchlistService.getUserWatchlistItemIDs( UserService.get( prc._user.id ) );
		}		rc.sortOrderArr = listToArray(rc.sortorder);				var LevelRange = event.getValue('level_range','');		if( listLen(LevelRange) eq 0 ) {			rc.level_range = '0,80'; 
		} else if( listLen(LevelRange) eq 1 ) {			rc.level_range = '#listGetAt(LevelRange,1)#,#listGetAt(LevelRange,1)#';
		} else if( listLen(LevelRange) eq 2 ) {			rc.level_range = '#listGetAt(LevelRange,1)#,#listGetAt(LevelRange,2)#';		}				rc.Paging		= getMyPlugin('Paging');		rc.Paging.setPagingBandGap( 8 );		rc.Paging.setPagingMaxRows( rc.per_page );		rc.boundaries	= rc.Paging.getBoundaries();		rc.offset		= rc.boundaries.startrow-1;		rc.max			= rc.Paging.getPagingMaxRows();		rc.Items = ItemService._search(argumentCollection=rc);				Event.setView('items/index');	}		function view(event,rc,prc) {		prc.customcontainer = true;		rc.Item = ItemService.get( Event.getNumericValue('item_id',0) );		Event.setView('items/view');
	}	function suggest(event,rc,prc) {		var Items = ItemService.suggest(			Keyword		= Event.getValue('keyword',''),			Max			= Event.getNumericValue('max',30),			sortOrder	= Event.getValue('sortorder','name asc')		);		Event.renderData(data=Items,type='json');	}	function proxygw2db(event,rc,prc) {		var u = ReplaceNoCase(rc.proxy,'-','?','one');		u = ReplaceNoCase(u,'*','&','all');		u = 'http://www.gw2db.com/items/' & u;				var caller = new http(url=u,method='GET');		caller.addParam(name="Accept",type="header",value="text/plain");		var result = caller.send().getPrefix();		local.fileContent = result.fileContent;		if( isInstanceOf(local.fileContent,'java.io.ByteArrayOutputStream') ){			local.charset = 'utf-8';			local.fileContent = local.fileContent.toString(local.charset);		}		event.renderData(data=local.fileContent, type='text');
	}		function test(event,rc,prc) {		var r = ItemService._search();				writedump(var=r,top=3);		abort;
	}		}