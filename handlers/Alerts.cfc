component output="false" singleton{	property name="ItemService" inject="ItemService";	property name="MarketDataService" inject="MarketDataService";	property name="WatchlistService" inject="WatchlistService";	property name="UserService" inject="UserService";	property name="AlertService" inject="AlertService";	property name="AlertlogService" inject="AlertlogService";		function preHandler(event,action,eventArguments){		if( prc.isLoggedIn ) {			prc.user = UserService.get( prc._user.id );		} else {			if( event.getCurrentEvent() does not contain 'login' ) {				setNextEvent('alerts.login');			}
		}	}		function login(event,rc,prc) {		Event.setView('alerts/login');
	}		function index(event,rc,prc) {		rc.htmltitle = ' > My Alerts';		Event.paramValue('page',1);		Event.paramValue('sortorder','i.name asc');		Event.paramValue('per_page',event.getNumericValue('per_page',30));		rc.user_id = prc.user.getID();				rc.Paging		= getMyPlugin('Paging');		rc.Paging.setPagingBandGap( 8 );		rc.Paging.setPagingMaxRows( rc.per_page );		rc.boundaries	= rc.Paging.getBoundaries();		rc.offset		= rc.boundaries.startrow-1;		rc.max			= rc.Paging.getPagingMaxRows();		rc.Alerts = AlertService._search(argumentCollection=rc);						Event.setView('alerts/index');
	}		function refreshalert_tr(event,rc,prc) {		rc.Alert = AlertService.get( Event.getNumericValue('alert_id',0) );		Event.setView(view='alerts/refreshalert_tr',layout='ajax');
	}		function ediymyalert(event,rc,prc) {		Event.setView(view='alerts/ediymyalert',layout='ajax');
	}		function updateEmail(event,rc,prc) {		prc.user.setEmail( Event.getValue('email','') );		UserService.save(prc.user);		location(url=cgi.HTTP_REFERER,addtoken=false);
	}		function edit(event,rc,prc) {		if( AlertService.countWhere(id=event.getNumericValue('alert_id',0),user_id=prc.user.getID()) ) {			rc.Alert = AlertService.getForUserByID(prc.user,event.getNumericValue('alert_id',0));		} else {			rc.Alert = AlertService.getByItemUser( Event.getNumericValue('item_id',0), prc.user.getID() );
		}		Event.setView(view='alerts/edit',layout='ajax');
	}		function save(event,rc,prc) {		if( AlertService.countWhere(id=event.getNumericValue('alert_id',0),user_id=prc.user.getID()) ) {			var Alert = AlertService.getForUserByID(prc.user,event.getNumericValue('alert_id',0));		} else {			var Alert = AlertService.getByItemUser( Event.getNumericValue('item_id',0), prc.user.getID() );		}		if( len(Event.getValue('email','')) ) {			prc.user.setEmail( Event.getValue('email','') );			UserService.save( prc.user );
		}		if(			IsNumeric( Event.getValue('val','') )		) {			populateModel(Alert);			AlertService.save( Alert );		} else {			var Alert = AlertService.getForUserByID(prc.user,event.getNumericValue('alert_id',0));			AlertService.delete( Alert );
		}		Event.renderData(data=true,type='json');
	}		function delete(event,rc,prc) {		//WatchlistService.deleteWhere(user_id=prc._user.id,item_id=Event.getNumericValue('item_id',0));		var Alert = AlertService.getForUserByID(prc.user,event.getNumericValue('alert_id',0));		AlertService.delete( Alert );		Event.renderData(data=true,type='json');
	}		function test(event,rc,prc) {				var t = AlertService.getProvenAndPastDueAlerts();		writedump(var=t,top=1);		abort;				//AlertService.startAlertingWorker();				abort;		var t = ormexecutequery('FROM Alert');		for(var i in t) {			writedump(i.getIsProven());			writedump(var=i,top=1);
		}		//writedump(var=t,top=1);		abort;		var t = AlertService._search(pastdue=true);				writedump(var=t,top=2);		abort;
	}		}